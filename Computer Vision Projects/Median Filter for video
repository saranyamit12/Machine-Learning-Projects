import cv2
import numpy as np

def apply_median_filter(frame, kernel_size):
    return cv2.medianBlur(frame, kernel_size)

def process_video(input_path, output_path, kernel_size):
    cap = cv2.VideoCapture(input_path)
    fps = int(cap.get(cv2.CAP_PROP_FPS))
    frame_size = (int(cap.get(cv2.CAP_PROP_FRAME_WIDTH)), int(cap.get(cv2.CAP_PROP_FRAME_HEIGHT)))

    fourcc = cv2.VideoWriter_fourcc(*'XVID')
    out = cv2.VideoWriter(output_path, fourcc, fps, frame_size)

    while cap.isOpened():
        ret, frame = cap.read()
        if not ret:
            break

        processed_frame = apply_median_filter(frame, kernel_size)
        out.write(processed_frame)

        cv2.imshow('Original', frame)
        cv2.imshow('Processed', processed_frame)

        if cv2.waitKey(1) & 0xFF == ord('q'):
            break

    cap.release()
    out.release()
    cv2.destroyAllWindows()

if __name__ == '__main__':
    input_video_path = 'input_video.mp4'
    output_video_path = 'output_video_median_filtered.mp4'
    kernel_size = 5  # Adjust kernel size as needed

    process_video(input_video_path, output_video_path, kernel_size)
